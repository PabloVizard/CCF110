exerc1 -------------------------------------------------------------------
float delta(float v1, float v2, float v3){
    return v2*v2 - (4*v1*v3);
}

float raiz1(float x, float y, float delta){
    return (float)(((-1 * y) + pow(delta, 0.5)) / 2 * x);
}

float raiz2(float valor_a, float valor_b, float delta){
    return (float)(((-1) * valor_b - pow(delta, 0.5)) / 2 * valor_a);
}

int main() {
    float a, b, c, d, r1, r2;

    //receber valores da equação de segundo grau
    scanf("%f %f %f", &a, &b, &c);

    //calcular delta
    d = delta(a, b, c);

    //condições do delta
    //calcular raizes
    if(d<0){
        printf("Não existe raiz real!");
    } else if(d==0){
        r1 = raiz1(a, b, c);
        printf("Delta: %.2f\nRaizes iguais: %.2f", d, r1);
    } else {
        r1 = raiz1(a, b, d);
        r2 = raiz2(a, b, d);

        printf("Delta: %.2f\nRaiz 1: %.2f\nRaiz 2: %.2f", d, r1, r2);
    }
}

exerc2 ------------------------------------------------------------------
int par_impar(int numero){
    if(numero%2 == 0){
        numero = 0;
    }else {
        numero = 1;
    }
    return numero;
}

int main() {
    int num, tipo;
    //receber valores
    scanf("%d", &num);

    //enviar para analise da função de par e impar
    tipo = par_impar(num);
    printf("%d", tipo);

}

exerc3 --------------------------------------------------------------------
int primo(int numero){
    int i, cont=0;
    for(i=1; i<=numero ;i++){
        if(numero%i==0){
            cont++;
        }
    }
    if(cont==2 || numero==1){
        return 1;
    } else{
        return 0;
    }
}

int main() {
    int num, tipo;
    //receber valor
    scanf("%d", &num);

    //função recebe valor e confirma se o numero é primo
    tipo = primo(num);
    printf("%d", tipo);
}

exerc4 ------------------------------------------------------------------
void inverter(int numero){
    int a, b;
    a = numero/100;
    numero = numero - (100*a);
    b = numero/10;
    numero = numero - (10*b);
    printf("%d%d%d", numero, b, a);
    return;

}

int main() {
    int num, inv;
    //receber valor
    scanf("%d", &num);

    //função inversão
    inverter(num);
}

exerc5 ------------------------------------------------------------------

exerc 6 ------------------------------------------------------------------
int troco(int troco){
    int total1;
    total1 = troco/50;
    printf("%d moedas de 50 centavos\n", total1);
    troco = troco % 50;

    total1 = troco/20;
    printf("%d moedas de 20 centavos\n", total1);
    troco = troco % 20;

    total1 = troco/10;
    printf("%d moedas de 10 centavos\n", total1);
    troco = troco % 10;

    total1 = troco/5;
    printf("%d moedas de 5 centavos\n", total1);
    troco = troco % 5;

    total1 = troco/2;
    printf("%d moedas de 2 centavos\n", total1);
    troco = troco % 2;

    total1 = troco/1;
    printf("%d moedas de 1 centavos\n", total1);
}

int main() {
    int t;
    double entrada, valor;
    scanf("%lf %lf", &valor, &entrada);
    valor = (entrada - valor)*100;
    t = troco(valor);

}

exerc 7 -----------------------------------------------------------------------
int mult(int *mult){
    int i, total=0;
    for(i=0; i<9; i++){
        if(i == 0)
            total = total + (mult[i]*10);
        if(i == 1)
            total = total + (mult[i]*9);
        if(i == 2)
            total = total + (mult[i]*8);
        if(i == 3)
            total = total + (mult[i]*7);
        if(i == 4)
            total = total + (mult[i]*6);
        if(i == 5)
            total = total + (mult[i]*5);
        if(i == 6)
            total = total + (mult[i]*4);
        if(i == 7)
            total = total + (mult[i]*3);
        if(i == 8)
            total = total + (mult[i]*2);
    }
    return total;
}
int divisao(int mul){
    mul = mul%11;
    if(mul>2)
        mul = 11 - mul;
    else
        mul = 0;
    return mul;
}
int soma(int *soma){
    int i, total=0;
    for(i=0; i<10; i++){
        if(i == 0)
            total = total + (soma[i]*11);
        if(i == 1)
            total = total + (soma[i]*10);
        if(i == 2)
            total = total + (soma[i]*9);
        if(i == 3)
            total = total + (soma[i]*8);
        if(i == 4)
            total = total + (soma[i]*7);
        if(i == 5)
            total = total + (soma[i]*6);
        if(i == 6)
            total = total + (soma[i]*5);
        if(i == 7)
            total = total + (soma[i]*4);
        if(i == 8)
            total = total + (soma[i]*3);
        if(i == 9)
            total = total + (soma[i]*2);
    }
    return total;
}
void comparar(int *fim, int *teste){
    int i;
    for(i=0; i<11; i++) {
        if (fim[i] != teste[i]) {
            printf("CPF Inválido!");
            break;
        }
        if(i == 10){
            if(fim[i] == teste[i]){
                printf("CPF Válido!");
            }
        }
    }
    return;
}

int main() {
    int i, cpf[11], temp[10], m, d, f, g, final[11];
    for(i=0; i<11; i++){
        scanf("%d", &cpf[i]);
    }
    m = mult(cpf);

    d = divisao(m);
    for(i=0; i<10; i++){
        if(i == 9)
            temp[i] = d;
        else
            temp[i] = cpf[i];
    }

    f = soma(temp);

    g = divisao(f);
    for(i=0; i<11; i++){
        if(i == 10)
            final[i] = g;
        else
            final[i] = temp[i];
    }
    comparar(cpf, final);
}

exerc8 --------------------------------------------------------------------------
double media(double n1, double n2, double n3){
    return (n1+n2+n3)/3;
}

int main() {
    double nota1, nota2, nota3, m;
    scanf("%lf %lf %lf", &nota1, &nota2, &nota3);
    m = media(nota1, nota2, nota3);
    printf("Média: %lf", m);
}

exerc9 ---------------------------------------------------------------------------
double aprovacao(double *notas){
    double soma=0, total=0;
    int i;

    for(i=0; i<5; i++){
        soma = soma + notas[i];
    }

    if(soma/5>=60){
        printf("APROVADO\n");
    }
    else{
        printf("REPROVADO\n");
    }

    return soma;
}

int main() {
    double nota[5], m, aprov;
    int i, j;

    for(i=0; i<10; i++) {
        for (j = 0; j < 5; j++) {
            scanf("%lf", &nota[i]);
        }
        aprov = aprovacao(nota);
        m = m + aprov;
        printf("%lf\n", m);
    }
    printf("Média: %lf", m/10);
}

exerc10 ----------------------------------------------------------------------------
void conversao(double m){
    double polegada, pes;
    polegada = 39.37*m;
    pes = 12*polegada;
    printf("Pes: %0.2lf\nPolegada: %0.2lf\n", pes, polegada);
    return;
}

int main() {
    double metros;
    scanf("%lf", &metros);
    conversao(metros);
}

exerc11 ----------------------------------------------------------------------------
double area(double ld1, double ld2, double ld3){
    return (ld1+ld2+ld3)/2;
}

int main() {
    double l1, l2, l3;
    scanf("%lf %lf %lf", &l1, &l2, &l3);
    printf("Área: %lf", area(l1, l2, l3));
}

exerc12 -----------------------------------------------------------------------------
int tempo(int hora, int minuto, int segundos){
    hora = hora*360;
    minuto = minuto*60;
    segundos = segundos + minuto + hora;
    return segundos;
}

int main() {
    int hr, min, seg, temp;
    scanf("%d %d %d", &hr, &min, &seg);
    temp = tempo(hr, min, seg);
    printf("Tempo em Segundos: %d", temp);
}

exrec13 ------------------------------------------------------------------------------
double distancia(double dx1, double dx2, double dy1, double dy2, double dz1, double dz2) {
    return sqrt(pow((dx2 - dx1), 2) + pow((dy2 - dy1), 2) + pow((dz2 - dz1), 2));
}

int main() {
    double x1, y1, z1, x2, y2, z2, dist;
    scanf("%lf %lf %lf", &x1, &y1, &z1);
    scanf("%lf %lf %lf", &x2, &y2, &z2);
    dist = distancia(x1, x2, y1, y2, z1, z2);
    printf("Distancia: %.2lf", dist);
}

exerc14 ---------------------------------------------------------------------------------
double operacao(double n1, double n2, char operador) {
    if(operador == '+'){
        return n1+n2;
    } else if(operador == '-'){
        return n1-n2;
    } else if(operador == '*'){
        return n1*n2;
    } else if(operador == '/'){
        return n1/n2;
    }
}

int main() {
    double num1, num2, oper;
    char ope[3];
    scanf("%lf %lf", &num1, &num2);
    getchar();
    scanf("%s", ope);
    oper = operacao(num1, num2, ope);
    printf("%lf", oper);
}

exerc15 --------------------------------------------------------------------------------------
double menor(double *n) {
    int i, j;
    double temp;
    for (i = 0; i < 3 ; i++) {
        for (j = i; j < 3; j++) {
            if(n[i]>n[j]){
                temp = n[i];
                n[i] = n[j];
                n[j] = temp;
            }
        }
    }
    return n[0];
}

int main() {
    int i;
    double num[3], m;
    for (i = 0; i < 3 ; i++) {
        scanf("%lf", &num[i]);
    }
    m = menor(num);
    printf("Menor: %.2lf", m);
}

exerc16 ---------------------------------------------------------------------------------------
void ordem(int *n) {
    int i, j, temp;

    for (i = 0; i < 10 ; i++) {
        for (j = i; j < 10; j++) {
            if(n[i]>n[j]){
                temp = n[i];
                n[i] = n[j];
                n[j] = temp;
            }
        }
    }
    for (i = 0; i < 10 ; i++) {
        printf("%d", n[i]);
        printf(" ");

    }
}

int main() {
    int i, num[10], m;
    for (i = 0; i < 10 ; i++) {
        scanf("%d", &num[i]);
    }
    ordem(num);
}

exerc17 -----------------------------------------------------------------------------------------
int soma(int *n) {
    int i, soma=0;
    for (i = 0;  i<15 ; i++) {
        soma += n[i];
    }
    return soma;
}

int main() {
    int i, num[15], m;
    for (i = 0; i < 15 ; i++) {
        scanf("%d", &num[i]);
    }
    m = soma(num);
    printf("%d", m);
}

exerc18 -------------------------------------------------------------------------------------------
void div(int *n) {
    int i;
    for (i = 0;  i<5 ; i++) {
        if(n[i]%3==0)
            printf("%d é divisivel por 3!\n", n[i]);
    }
}

int main() {
    int i, num[5], m;
    for (i = 0; i < 5 ; i++) {
        scanf("%d", &num[i]);
    }
    div(num);
}

exerc19 -------------------------------------------------------------------------------------------
void sinal(int n) {
    if(n<0)
        printf("Negativo!");
    else if(n>=0)
        printf("Positivo!");
}

int main() {
    int num;
    scanf("%d", &num);
    sinal(num);
}

exerc20--------------------------------------------------------------------------------------------
int soma(int *n) {
    int i, soma=0;
    for (i = 0;  i<15 ; i++) {
        soma += pow(n[i], 2);
    }
    return soma;
}

int main() {
    int i, num[15], m;
    for (i = 0; i < 15 ; i++) {
        scanf("%d", &num[i]);
    }
    m = soma(num);
    printf("%d", m);
}

exerc21 ------------------------------------------------------------------------------------------
void triangulo(int x, int y, int z) {
    if(x==y && y==z)
        printf("Equilatero!");
    else if(x!=y && y!=z && x!=z)
        printf("Escaleno!");
    else if((x==y && y!=z && x!=z) || (x!=y && y==z && x!=z) || (x!=y && y!=z && x==z))
        printf("Isóceles!");
}

int main() {
    int a, b, c;
    scanf("%d %d %d", &a, &b, &c);
    triangulo(a, b, c);
}